[{"C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\index.js":"1","C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\reportWebVitals.js":"2","C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\component\\class\\calculator.js":"3","C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\component\\class\\calculator2.js":"4","C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\component\\class2\\mapper.js":"5","C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\component\\class3\\calculator3.js":"6","C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\component\\class4\\lifecycle.js":"7","C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\component\\class4\\lifecycle2.js":"8","C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\component\\todo\\todo.js":"9","C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\component\\todo\\dialog.js":"10","C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\component\\todo\\example.js":"11","C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\component\\todo\\example2.js":"12"},{"size":857,"mtime":1611916818253,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1434,"mtime":1611577003883,"results":"16","hashOfConfig":"14"},{"size":980,"mtime":1611577014889,"results":"17","hashOfConfig":"14"},{"size":1850,"mtime":1611577028747,"results":"18","hashOfConfig":"14"},{"size":1861,"mtime":1611577041392,"results":"19","hashOfConfig":"14"},{"size":1135,"mtime":1611844979890,"results":"20","hashOfConfig":"14"},{"size":733,"mtime":1611672718560,"results":"21","hashOfConfig":"14"},{"size":7386,"mtime":1611924093021,"results":"22","hashOfConfig":"14"},{"size":1624,"mtime":1611910252015,"results":"23","hashOfConfig":"14"},{"size":1906,"mtime":1611911407247,"results":"24","hashOfConfig":"14"},{"size":5951,"mtime":1611916405147,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"mv42iy",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"29"},"C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\index.js",["54","55","56","57","58","59","60"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Calculator2 from \"./component/class/calculator2\";\nimport Mapper from \"./component/class2/mapper\";\nimport Calculator3 from \"./component/class3/calculator3\";\nimport Lifecycle from \"./component/class4/lifecycle\";\nimport Todo from \"./component/todo/todo\";\nimport AlertDialog from \"./component/todo/dialog\";\nimport Ex from \"./component/todo/example2\";\nimport App from \"./component/class4/lifecycle2\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Todo />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["61","62"],"C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\component\\class\\calculator.js",[],"C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\component\\class\\calculator2.js",[],"C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\component\\class2\\mapper.js",[],"C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\component\\class3\\calculator3.js",[],"C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\component\\class4\\lifecycle.js",[],"C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\component\\class4\\lifecycle2.js",["63"],"import React, { useState } from \"react\";\r\nimport { Switch, Grid, Typography, Button, Paper } from \"@material-ui/core\";\r\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nfunction App() {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: darkMode ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Paper style={{ height: \"100vh\" }}>\r\n        <Grid container direction=\"column\">\r\n          <Typography variant=\"h1\">Todo App</Typography>\r\n\r\n          <Switch checked={darkMode} onChange={() => setDarkMode(!darkMode)} />\r\n        </Grid>\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\nexport default App;\r\n","C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\component\\todo\\todo.js",["64","65"],"C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\component\\todo\\dialog.js",[],"C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\component\\todo\\example.js",[],"C:\\Users\\USER\\Desktop\\App stone\\bikram-react\\src\\component\\todo\\example2.js",["66"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default class Ex extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      open: false,\r\n      tasksArr: [],\r\n      taskInput: \"\",\r\n      tasksCompleted: [],\r\n      tasksUndo: []\r\n    };\r\n  }\r\n  openDialog = () => {\r\n    this.setState({ open: true });\r\n  };\r\n  closeDialog = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleInput = (e) => {\r\n    this.setState({\r\n      taskInput: e.target.value\r\n    });\r\n  };\r\n  handlePush = () => {\r\n    var a1 = this.state.tasksArr;\r\n    a1.push(this.state.taskInput);\r\n    this.setState({\r\n      tasksArr: a1,\r\n      taskInput: \"\"\r\n    });\r\n  };\r\n  handleComplete = (index) => {\r\n    var a1 = this.state.tasksArr;\r\n    var a = a1.splice(index, 1);\r\n    var a2 = this.state.tasksCompleted;\r\n    a2.push(a[0]);\r\n    this.setState({\r\n      tasksCompleted: a2\r\n    });\r\n  };\r\n  handleUndo = (index) => {\r\n    var a2 = this.state.tasksCompleted;\r\n    var b = a2.splice(index, 1);\r\n    var b2 = this.state.tasksUndo;\r\n    b2.push(b[0]);\r\n    this.setState({\r\n      tasksArr: b2\r\n    });\r\n  };\r\n  handleDelete = (index) => {\r\n    var a2 = this.state.tasksCompleted;\r\n    a2.splice(index, 1);\r\n    this.setState({\r\n      tasksCompleted: a2\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <input\r\n          style={{\r\n            borderRadius: 10,\r\n            height: 30,\r\n            width: 175,\r\n            outline: \"none\",\r\n            marginRight: 20\r\n          }}\r\n          placeholder=\"Enter The Task\"\r\n          value={this.state.taskInput}\r\n          onChange={this.handleInput}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          disabled={this.state.taskInput === \"\" ? true : false}\r\n          onClick={this.handlePush}\r\n        >\r\n          Add Task\r\n        </Button>\r\n\r\n        <div class=\"float-container\">\r\n          <div class=\"float-child\">\r\n            {this.state.tasksArr.length === 0 ? (\r\n              <h2>You have No tasks to do</h2>\r\n            ) : (\r\n              <h2>Tasks to do</h2>\r\n            )}\r\n            <div>\r\n              <ul>\r\n                {this.state.tasksArr.map((single, index) => {\r\n                  return (\r\n                    <li>\r\n                      {single}\r\n                      <br />\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          this.handleComplete(index, single);\r\n                        }}\r\n                      >\r\n                        Completed\r\n                      </Button>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class=\"float-child2\">\r\n            {this.state.tasksCompleted.length === 0 ? (\r\n              <h2>No Task Completed</h2>\r\n            ) : (\r\n              <h2>Tasks Completed</h2>\r\n            )}\r\n            <div>\r\n              <ul>\r\n                {this.state.tasksCompleted.map((single, index) => {\r\n                  return (\r\n                    <li>\r\n                      {single}\r\n                      <br />\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          this.handleUndo(index, single);\r\n                        }}\r\n                      >\r\n                        Undo\r\n                      </Button>\r\n\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{ backgroundColor: \"darkred\" }}\r\n                        size=\"small\"\r\n                        onClick={this.openDialog}\r\n                      >\r\n                        DELETE\r\n                      </Button>\r\n                      <Dialog\r\n                        open={this.state.open}\r\n                        onClose={this.closeDialog}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                      >\r\n                        <DialogTitle id=\"alert-dialog-title\">\r\n                          {\"Delete the task\"}\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                          <DialogContentText id=\"alert-dialog-description\">\r\n                            Are you sure you want to do this?\r\n                          </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                          <Button onClick={this.closeDialog} color=\"primary\">\r\n                            Cancel\r\n                          </Button>\r\n                          <Button\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              {\r\n                                this.handleDelete(index);\r\n                              }\r\n                            }}\r\n                            onClose={this.closeDialog}\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </Dialog>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",{"ruleId":"67","severity":1,"message":"68","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":19},{"ruleId":"67","severity":1,"message":"71","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":14},{"ruleId":"67","severity":1,"message":"72","line":5,"column":8,"nodeType":"69","messageId":"70","endLine":5,"endColumn":19},{"ruleId":"67","severity":1,"message":"73","line":6,"column":8,"nodeType":"69","messageId":"70","endLine":6,"endColumn":17},{"ruleId":"67","severity":1,"message":"74","line":8,"column":8,"nodeType":"69","messageId":"70","endLine":8,"endColumn":19},{"ruleId":"67","severity":1,"message":"75","line":9,"column":8,"nodeType":"69","messageId":"70","endLine":9,"endColumn":10},{"ruleId":"67","severity":1,"message":"76","line":10,"column":8,"nodeType":"69","messageId":"70","endLine":10,"endColumn":11},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"67","severity":1,"message":"81","line":2,"column":36,"nodeType":"69","messageId":"70","endLine":2,"endColumn":42},{"ruleId":"67","severity":1,"message":"82","line":6,"column":10,"nodeType":"69","messageId":"70","endLine":6,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":198,"column":35,"nodeType":"85","messageId":"86","endLine":200,"endColumn":36},{"ruleId":"83","severity":1,"message":"84","line":174,"column":31,"nodeType":"85","messageId":"86","endLine":176,"endColumn":32},"no-unused-vars","'Calculator2' is defined but never used.","Identifier","unusedVar","'Mapper' is defined but never used.","'Calculator3' is defined but never used.","'Lifecycle' is defined but never used.","'AlertDialog' is defined but never used.","'Ex' is defined but never used.","'App' is defined but never used.","no-native-reassign",["87"],"no-negated-in-lhs",["88"],"'Button' is defined but never used.","'dark' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]